{"ast":null,"code":"const baseUrl = 'http://localhost:3000';\nexport const loginUser = loginData => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify(loginData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/auth/login\"), opts).then(resp => resp.json());\n};\nexport const registerUser = registerData => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({\n      user: registerData\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/users/\"), opts).then(resp => resp.json());\n};\n\nconst createActivity = (id, data) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({\n      activity: data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/users/\").concat(id, \"/activities\"), opts).then(resp => resp.json());\n}; //  old one below  TUES 2:06PM\n// const createActivity = (data) => {\n//   const opts = {\n//     method: 'POST',\n//     body: JSON.stringify({ activity: data }),\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n//   return fetch(`${baseUrl}/activities`, opts)\n//     .then(resp => resp.json())\n// }\n// xxxxxxxxxxxxxxx old one above\n\n\nconst readAllActivities = () => {\n  return fetch(\"\".concat(baseUrl, \"/activities\")).then(resp => resp.json());\n};\n\nconst updateActivity = (id, data) => {\n  const opts = {\n    method: 'PUT',\n    body: JSON.stringify({\n      activity: data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/activities/\").concat(id), opts).then(resp => resp.json());\n};\n\nconst destroyActivity = id => {\n  const opts = {\n    method: 'DELETE'\n  };\n  return fetch(\"\".concat(baseUrl, \"/activities/\").concat(id), opts);\n};\n\nexport { createActivity, readAllActivities, updateActivity, destroyActivity };","map":{"version":3,"sources":["/Users/user/ga/project4/copilot/copilot_app/client/src/services/api-helper.js"],"names":["baseUrl","loginUser","loginData","opts","method","body","JSON","stringify","headers","fetch","then","resp","json","registerUser","registerData","user","createActivity","id","data","activity","readAllActivities","updateActivity","destroyActivity"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,SAAD,IAAe;AACtC,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAFK;AAGXM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAQA,SAAOC,KAAK,WAAIT,OAAJ,kBAA0BG,IAA1B,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAXM;AAaP,OAAO,MAAMC,YAAY,GAAIC,YAAD,IAAkB;AAC5C,QAAMX,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEQ,MAAAA,IAAI,EAAED;AAAR,KAAf,CAFK;AAGXN,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAQA,SAAOC,KAAK,WAAIT,OAAJ,cAAsBG,IAAtB,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAXM;;AAeP,MAAMI,cAAc,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACnC,QAAMf,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEY,MAAAA,QAAQ,EAAED;AAAZ,KAAf,CAFK;AAGXV,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAOA,SAAOC,KAAK,WAAIT,OAAJ,oBAAqBiB,EAArB,kBAAsCd,IAAtC,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAVD,C,CAeA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMQ,iBAAiB,GAAG,MAAM;AAC9B,SAAOX,KAAK,WAAIT,OAAJ,iBAAL,CACJU,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAHD;;AAKA,MAAMS,cAAc,GAAG,CAACJ,EAAD,EAAKC,IAAL,KAAc;AACnC,QAAMf,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEY,MAAAA,QAAQ,EAAED;AAAZ,KAAf,CAFK;AAGXV,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAOA,SAAOC,KAAK,WAAIT,OAAJ,yBAA0BiB,EAA1B,GAAgCd,IAAhC,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAVD;;AAYA,MAAMU,eAAe,GAAIL,EAAD,IAAQ;AAC9B,QAAMd,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE;AADG,GAAb;AAGA,SAAOK,KAAK,WAAIT,OAAJ,yBAA0BiB,EAA1B,GAAgCd,IAAhC,CAAZ;AACD,CALD;;AAOA,SACEa,cADF,EAEEI,iBAFF,EAGEC,cAHF,EAIEC,eAJF","sourcesContent":["const baseUrl = 'http://localhost:3000'\n\nexport const loginUser = (loginData) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify(loginData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(`${baseUrl}/auth/login`, opts)\n    .then(resp => resp.json())\n}\n\nexport const registerUser = (registerData) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({ user: registerData }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(`${baseUrl}/users/`, opts)\n    .then(resp => resp.json())\n}\n\n\n\nconst createActivity = (id, data) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({ activity: data }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return fetch(`${baseUrl}/users/${id}/activities`, opts)\n    .then(resp => resp.json())\n}\n\n\n\n\n//  old one below  TUES 2:06PM\n// const createActivity = (data) => {\n  \n//   const opts = {\n//     method: 'POST',\n//     body: JSON.stringify({ activity: data }),\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n//   return fetch(`${baseUrl}/activities`, opts)\n//     .then(resp => resp.json())\n// }\n// xxxxxxxxxxxxxxx old one above\n\n\nconst readAllActivities = () => {\n  return fetch(`${baseUrl}/activities`)\n    .then(resp => resp.json())\n}\n\nconst updateActivity = (id, data) => {\n  const opts = {\n    method: 'PUT',\n    body: JSON.stringify({ activity: data }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return fetch(`${baseUrl}/activities/${id}`, opts)\n    .then(resp => resp.json())\n}\n\nconst destroyActivity = (id) => {\n  const opts = {\n    method: 'DELETE'\n  }\n  return fetch(`${baseUrl}/activities/${id}`, opts)\n}\n\nexport {\n  createActivity,\n  readAllActivities,\n  updateActivity,\n  destroyActivity\n}\n"]},"metadata":{},"sourceType":"module"}