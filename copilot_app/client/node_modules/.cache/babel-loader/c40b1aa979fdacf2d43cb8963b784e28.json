{"ast":null,"code":"const baseUrl = 'http://localhost:3000';\nexport const loginUser = loginData => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify(loginData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/auth/login\"), opts).then(resp => resp.json());\n};\nexport const registerUser = registerData => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({\n      user: registerData\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/users/\"), opts).then(resp => resp.json());\n};\n\nconst createTeacher = data => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({\n      teacher: data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/teachers\"), opts).then(resp => resp.json());\n};\n\nconst readAllTeachers = () => {\n  return fetch(\"\".concat(baseUrl, \"/teachers\")).then(resp => resp.json());\n};\n\nconst updateTeacher = (id, data) => {\n  const opts = {\n    method: 'PUT',\n    body: JSON.stringify({\n      teacher: data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(\"\".concat(baseUrl, \"/teachers/\").concat(id), opts).then(resp => resp.json());\n};\n\nconst destroyTeacher = id => {\n  const opts = {\n    method: 'DELETE'\n  };\n  return fetch(\"\".concat(baseUrl, \"/teachers/\").concat(id), opts);\n};\n\nexport { createTeacher, readAllTeachers, updateTeacher, destroyTeacher };","map":{"version":3,"sources":["/Users/user/ga/project4/copilot/copilot_app/client/src/services/api-helper.js"],"names":["baseUrl","loginUser","loginData","opts","method","body","JSON","stringify","headers","fetch","then","resp","json","registerUser","registerData","user","createTeacher","data","teacher","readAllTeachers","updateTeacher","id","destroyTeacher"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,SAAS,GAAIC,SAAD,IAAe;AACtC,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAFK;AAGXM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAQA,SAAOC,KAAK,WAAIT,OAAJ,kBAA0BG,IAA1B,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAXM;AAaP,OAAO,MAAMC,YAAY,GAAIC,YAAD,IAAkB;AAC5C,QAAMX,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEQ,MAAAA,IAAI,EAAED;AAAR,KAAf,CAFK;AAGXN,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAQA,SAAOC,KAAK,WAAIT,OAAJ,cAAsBG,IAAtB,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAXM;;AAaP,MAAMI,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAMd,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEW,MAAAA,OAAO,EAAED;AAAX,KAAf,CAFK;AAGXT,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAOA,SAAOC,KAAK,WAAIT,OAAJ,gBAAwBG,IAAxB,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAVD;;AAYA,MAAMO,eAAe,GAAG,MAAM;AAC5B,SAAOV,KAAK,WAAIT,OAAJ,eAAL,CACJU,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAHD;;AAKA,MAAMQ,aAAa,GAAG,CAACC,EAAD,EAAKJ,IAAL,KAAc;AAClC,QAAMd,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEW,MAAAA,OAAO,EAAED;AAAX,KAAf,CAFK;AAGXT,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHE,GAAb;AAOA,SAAOC,KAAK,WAAIT,OAAJ,uBAAwBqB,EAAxB,GAA8BlB,IAA9B,CAAL,CACJO,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,CAAP;AAED,CAVD;;AAYA,MAAMU,cAAc,GAAID,EAAD,IAAQ;AAC7B,QAAMlB,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE;AADG,GAAb;AAGA,SAAOK,KAAK,WAAIT,OAAJ,uBAAwBqB,EAAxB,GAA8BlB,IAA9B,CAAZ;AACD,CALD;;AAOA,SACEa,aADF,EAEEG,eAFF,EAGEC,aAHF,EAIEE,cAJF","sourcesContent":["const baseUrl = 'http://localhost:3000'\n\nexport const loginUser = (loginData) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify(loginData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(`${baseUrl}/auth/login`, opts)\n    .then(resp => resp.json())\n}\n\nexport const registerUser = (registerData) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({ user: registerData }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(`${baseUrl}/users/`, opts)\n    .then(resp => resp.json())\n}\n\nconst createTeacher = (data) => {\n  const opts = {\n    method: 'POST',\n    body: JSON.stringify({ teacher: data }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return fetch(`${baseUrl}/teachers`, opts)\n    .then(resp => resp.json())\n}\n\nconst readAllTeachers = () => {\n  return fetch(`${baseUrl}/teachers`)\n    .then(resp => resp.json())\n}\n\nconst updateTeacher = (id, data) => {\n  const opts = {\n    method: 'PUT',\n    body: JSON.stringify({ teacher: data }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return fetch(`${baseUrl}/teachers/${id}`, opts)\n    .then(resp => resp.json())\n}\n\nconst destroyTeacher = (id) => {\n  const opts = {\n    method: 'DELETE'\n  }\n  return fetch(`${baseUrl}/teachers/${id}`, opts)\n}\n\nexport {\n  createTeacher,\n  readAllTeachers,\n  updateTeacher,\n  destroyTeacher\n}\n"]},"metadata":{},"sourceType":"module"}